---
- name: Check clickhouse config, data and logs
  file:
    dest: "{{ item }}"
    owner: "{{ clickhouse_user | default('clickhouse') }}"
    group: "{{ clickhouse_group | default('clickhouse') }}"
    mode: "ug=rwx,o-rwx"
    state: directory
  loop:
    - "{{ clickhouse_path_logdir }}"
    - "{{ clickhouse_path_configdir }}"
    - "{{ clickhouse_path_tmp }}"
    - "{{ clickhouse_path_data }}"
  notify: restart-ch
  become: true
  tags: config_sys_main

- name: Config | Generate system config
  template:
    src: config.j2
    dest: "{{ clickhouse_path_configdir }}/config.xml"
    owner: "{{ clickhouse_user | default('clickhouse') }}"
    group: "{{ clickhouse_group | default('clickhouse') }}"
    mode: "ug=rw,o-rwx"
    backup: true
  notify: restart-ch
  become: true
  tags: config_sys_main

- name: Config | Generate users config
  template:
    src: users.j2
    dest: "{{ clickhouse_path_configdir }}/users.xml"
    owner: "{{ clickhouse_user | default('clickhouse') }}"
    group: "{{ clickhouse_group | default('clickhouse') }}"
    mode: "ug=rw,o-rwx"
    backup: true
  become: true
  tags: config_sys_main

- name: Config | Create conf folder
  file:
    path: "{{ clickhouse_path_configdir }}/config.d"
    state: directory
    owner: "{{ clickhouse_user | default('clickhouse') }}"
    group: "{{ clickhouse_group | default('clickhouse') }}"
    mode: "ug=rwx,o-rwx"
  become: true
  tags: config_sys_main

- name: Config | Create users.d folder
  file:
    path: "{{ clickhouse_path_configdir }}/users.d"
    state: directory
    owner: "{{ clickhouse_user | default('clickhouse') }}"
    group: "{{ clickhouse_group | default('clickhouse') }}"
    mode: "ug=rwx,o-rwx"
  become: true
  tags: config_custom_users

- name: Config | Generate system config
  template:
    src: config.j2
    dest: "{{ clickhouse_path_configdir }}/config.d/config.xml"
    owner: "{{ clickhouse_user | default('clickhouse') }}"
    group: "{{ clickhouse_group | default('clickhouse') }}"
    mode: "ug=rw,o-rwx"
  notify: restart-ch
  become: true
  tags: config_custom_users

- name: Config | Generate custom system config
  template:
    src: "{{ item }}.j2"
    dest: "{{ clickhouse_path_configdir }}/config.d/{{ item }}.xml"
    owner: "{{ clickhouse_user | default('clickhouse') }}"
    group: "{{ clickhouse_group | default('clickhouse') }}"
    mode: "ug=rw,o-rwx"
    backup: true
  with_items:
  - "custom-config"
  - "database_atomic"
  - "memory"
  - "prometeus"
  - "queries"
  - "logs"
  notify: restart-ch
  become: true
  tags: config_sys_main

- name: Config | Generate users config
  template:
    src: users.j2
    dest: "{{ clickhouse_path_configdir }}/users.d/users.xml"
    owner: "{{ clickhouse_user | default('clickhouse') }}"
    group: "{{ clickhouse_group | default('clickhouse') }}"
    mode: "ug=rw,o-rwx"
  become: true
  tags: config_sys_main

- name: Config | Generate remote_servers config
  template:
    src: remote_servers.j2
    dest: "{{ clickhouse_path_configdir }}/config.d/clickhouse_remote_servers.xml"
    owner: "{{ clickhouse_user | default('clickhouse') }}"
    group: "{{ clickhouse_group | default('clickhouse') }}"
    mode: "ug=rw,o-rwx"
  notify: restart-ch
  become: true
  when: clickhouse_clusters is defined and not clickhouse_shards_multi
  tags: config_sys_main

- name: Config | Generate remote_servers config with multi shards
  template:
    src: remote-servers.shards.j2
    dest: "{{ clickhouse_path_configdir }}/config.d/{{ clickhouse_remote_servers }}"
    owner: clickhouse
    group: clickhouse
    backup: true
  notify: restart-ch
  become: true
  when: clickhouse_clusters is defined and clickhouse_shards_multi
  tags: config_sys_main

- name: Config | Generate macros config
  template:
    src: macros.j2
    dest: "{{ clickhouse_path_configdir }}/config.d/macros.xml"
    owner: "{{ clickhouse_user | default('clickhouse') }}"
    group: "{{ clickhouse_group | default('clickhouse') }}"
    mode: "ug=rw,o-rwx"
    backup: true
  notify: restart-ch
  become: true
  when: clickhouse_macros is defined
  tags: config_sys_main

- name: Config | Generate zookeeper servers config
  template:
    src: zookeeper-servers.j2
    dest: "{{ clickhouse_path_configdir }}/config.d/zookeeper-servers.xml"
    owner: "{{ clickhouse_user | default('clickhouse') }}"
    group: "{{ clickhouse_group | default('clickhouse') }}"
    mode: "u=rw,og=r"
    backup: true
  notify: restart-ch
  become: true
  when: clickhouse_zookeeper_nodes is defined
  tags: config_sys_main

- name: Config | Fix interserver_http_port and intersever_https_port collision
  lineinfile:
    path: "{{ clickhouse_path_configdir }}/config.xml"
    search_string: '<interserver_http_port>'
    state: absent
  become: true
  when: clickhouse_interserver_https is defined

- name: Config | Generate graphite config
  template:
    src: graphite.j2
    dest: "{{ clickhouse_path_configdir }}/config.d/graphite.xml"
    owner: "{{ clickhouse_user | default('clickhouse') }}"
    group: "{{ clickhouse_group | default('clickhouse') }}"
    backup: true
    mode: "u=rw,og=r"
  notify: restart-ch
  become: true
  when: clickhouse_graphite is defined
  tags: config_sys_main

- name: Config | Generate graphite rollup config
  template:
    src: rollup.j2
    dest: "{{ clickhouse_path_configdir }}/config.d/rollup.xml"
    owner: "{{ clickhouse_user | default('clickhouse') }}"
    group: "{{ clickhouse_group | default('clickhouse') }}"
    backup: true
    mode: "u=rw,og=r"
  notify: restart-ch
  become: true
  when: clickhouse_graphite_rollup is defined
  tags: config_sys_main

- name: Config | Generate user client config
  template:
    src: client.j2
    dest: "/etc/clickhouse-client/config.xml"
    owner: "{{ clickhouse_user | default('clickhouse') }}"
    group: "{{ clickhouse_group | default('clickhouse') }}"
    backup: true
    mode: "u=rw,og=r"
  become: true
  tags: config_sys_main
